services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment: { ZOOKEEPER_CLIENT_PORT: 2181 }

    kafka:
      image: confluentinc/cp-kafka:7.5.0
      depends_on: [zookeeper]
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: "1"
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
        KAFKA_MIN_INSYNC_REPLICAS: "1"
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: nyc
      POSTGRES_USER: nyc
      POSTGRES_PASSWORD: nyc
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  adminer:
    image: adminer
    ports: ["8082:8080"]

volumes:
  pgdata:
